#!/bin/bash
set -o noglob
shopt -qs extglob

printUsage()
{
    cat <<HELPTEXT
Compare the two passed VERSIONs, either returning 0 (equal), 1 (VERSION1
larger), 2 (VERSION1 smaller), or the result of the passed compare operation.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '...VERSION1... [-lt|-le|-eq|-ne|-ge|-gt] ...VERSION2... [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

extractVersion()
{
    if [[ ! "$1" =~ [0-9]+(\.[0-9]+)* ]]; then
	printf >&2 'ERROR: Not a version: %s\n' "$1"
	exit 2
    fi
    printf %s "${BASH_REMATCH[0]}"
}

largerEqSmaller()
{
    local i IFS=.
    typeset -a version1=($1) version2=($2)

    # Fill empty fields in version1 with zeros.
    for ((i=${#version1[@]}; i<${#version2[@]}; i++))
    do
	version1[i]=0
    done
    for ((i=0; i<${#version1[@]}; i++))
    do
	[ -n "${version2[i]}" ] || version2[i]=0	# Fill empty fields in version2 with zeros.

	if ((10#${version1[i]} > 10#${version2[i]}))
	then
	    return 1
	fi
	if ((10#${version1[i]} < 10#${version2[i]}))
	then
	    return 2
	fi
    done
    return 0
}

if [ $# -eq 2 ]; then
    version1="$(extractVersion "$1")"; shift
    version2="$(extractVersion "$1")"; shift
    largerEqSmaller "$version1" "$version2"
    exit $?
elif [ $# -eq 3 ]; then
    version1="$(extractVersion "$1")"; shift
    compareOp="$1"; shift
    version2="$(extractVersion "$1")"; shift
    largerEqSmaller "$version1" "$version2"
    case $? in
	0)  [[ "$compareOp" = @(-eq|-le|-ge) ]];;
	1)  [[ "$compareOp" = @(-ne|-ge|-gt) ]];;
	2)  [[ "$compareOp" = @(-ne|-le|-lt) ]];;
    esac
else
    printUsage "$0" >&2
    exit 2
fi
