#!/bin/bash
shopt -qs extglob

printUsage()
{
    local baseVersionUsage='' baseVersionVar
    if [ -z "$VERSIONREQUIREMENT_BASE_VERSION" -a -z "$VERSIONREQUIREMENT_BASE_COMMANDLINE" ]; then
	baseVersionUsage='against VERSIONREQUIREMENT_BASE_VERSION / the numeric output of VERSIONREQUIREMENT_BASE_COMMANDLINE'
	baseVersionVar="VERSIONREQUIREMENT_BASE_VERSION=X[.x]|VERSIONREQUIREMENT_BASE_COMMANDLINE='foo --version'"
    fi

    cat <<HELPTEXT
Test for ${VERSIONREQUIREMENT_WHAT:-some version}${baseVersion:+ }${baseVersion}; ${baseVersion:+
}succeeds if at least one passed requirement is true.
HELPTEXT
    echo
    printf "Usage: ${baseVersionVar}${baseVersionVar:+ }%q %s\n" "$(basename "$1")" '-N[.n]|[!]N[.n]|N[.n]+|N[.n]-M[.m]|N[.n]%M[.m] [...] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

if [ -z "$VERSIONREQUIREMENT_BASE_VERSION" -a -n "$VERSIONREQUIREMENT_BASE_COMMANDLINE" ]; then
    if versionOutput="$(eval "$VERSIONREQUIREMENT_BASE_COMMANDLINE")" && [[ "$versionOutput" =~ [0-9.]+ ]]; then
	VERSIONREQUIREMENT_BASE_VERSION="${BASH_REMATCH[0]}"
    else
	printf >&2 'ERROR: The base version could not be obtained through %s\n' "$VERSIONREQUIREMENT_BASE_COMMANDLINE"
	exit 3
    fi
fi

if [ -z "$VERSIONREQUIREMENT_BASE_VERSION" ]; then
    echo 'ERROR: No base version set in VERSIONREQUIREMENT_BASE_VERSION.'
    echo
    printUsage "$0"
    exit 2
elif [ $# -eq 0 ]; then
    echo 'ERROR: No version requirement passed.'
    echo
    printUsage "$0"
    exit 2
fi >&2

for versionRequirement
do
    case "$versionRequirement" in
	-+([0-9.]))		versionCompare $VERSIONREQUIREMENT_BASE_VERSION -le ${versionRequirement#-} && exit 0;;
	+([0-9.])+)		versionCompare $VERSIONREQUIREMENT_BASE_VERSION -ge ${versionRequirement%+} && exit 0;;
	+([0-9.])-+([0-9.]))	minVersion=${versionRequirement%-*}
				maxVersion=${versionRequirement#*-}
				if versionCompare $VERSIONREQUIREMENT_BASE_VERSION -ge $minVersion && versionCompare $VERSIONREQUIREMENT_BASE_VERSION -le $maxVersion; then
				    exit 0
				fi
				;;
	+([0-9.])%+([0-9.]))	minVersion=${versionRequirement%\%*}
				maxVersion=${versionRequirement#*%}
				if versionCompare $VERSIONREQUIREMENT_BASE_VERSION -lt $minVersion || versionCompare $VERSIONREQUIREMENT_BASE_VERSION -gt $maxVersion; then
				    exit 0
				fi
				;;
	!+([0-9.]))		versionCompare $VERSIONREQUIREMENT_BASE_VERSION -eq ${versionRequirement#!} || exit 0;;
	+([0-9.]))		versionCompare $VERSIONREQUIREMENT_BASE_VERSION -eq $versionRequirement && exit 0;;
	*)			printf >&2 'ERROR: Invalid version requirement: %s\n' "$versionRequirement"
				exit 2
				;;
    esac
done
exit 1
