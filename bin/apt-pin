#!/bin/bash

readonly SYNAPTIC_PREF_FILESPEC=/var/lib/synaptic/preferences

printUsage()
{
    cat <<HELPTEXT
Pin the passed PACKAGE-NAME to PACKAGE-VERSION, so that apt, apt-get, aptitude
and GUI tools such as synaptic and muon will not offer updates for it.
This is an alternative to apt-mark, which is usable only if you
install/remove/upgrade software only with apt-get; otherwise you should use
pinning, either through a UI (in Synaptic: Package > Lock Version), or through
this command.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" 'PACKAGE-NAME PACKAGE-VERSION [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac
if [ $# -ne 2 ]; then
    printUsage "$0" >&2
    exit 2
fi
readonly packageName="${1:?}"; shift
readonly packageVersion="${1:?}"; shift

readonly prescriptivePackageLines="Package: $packageName
Pin: version $packageVersion"
readonly completePackageLines="$prescriptivePackageLines
Pin-Priority: 1001
"

if [ -e "$SYNAPTIC_PREF_FILESPEC" ] && multilinegrep --quiet --fixed-strings --line-regexp -e "$prescriptivePackageLines" -- "$SYNAPTIC_PREF_FILESPEC"; then
    printf >&2 'Package %s is already pinned to version %s.\n' "$packageName" "$packageVersion"
    exit 1
fi
# TODO: Implement updating existing version to a different passed version.

if ! touch-p "$SYNAPTIC_PREF_FILESPEC" 2>/dev/null; then
    printf >&2 'ERROR: Cannot write to %s.\n' "$SYNAPTIC_PREF_FILESPEC"
    exit 3
fi
printf '%s\n' "$completePackageLines" >> "$SYNAPTIC_PREF_FILESPEC" && \
    printf 'Package %s is now pinned to version %s.\n' "$packageName" "$packageVersion"
